proc float Addition(float $num[])
    {
     float $sum = 0;
 
     for ($i = 0; $i < size($num); $i++)
         {
          $sum += $num[$i];
         }   
 
     print("The Sum of ");
     
     for ($j = 0; $j <size($num); $j++)
     {
         print(($num[$j]) + ",");
     }
     
     print(" is " + $sum + "!");
     
     return $sum;   
    }
    
proc float Sub(float $num[])
{
    float $end = $num[0];
    for ($k = 1; $k < size($num); $k++)
    {
        $end -= $num[$k];
    }
    
     print("The Difference of ");
     
     for ($j = 0; $j <size($num); $j++)
     {
         print(($num[$j]) + ",");
     }
     
     print(" is " + $end + "!");
    return $end;
}

proc float Mult(float $num[])
{
    float $prod = 1;
    for ($j = 0; $j < size($num); $j++)
    {
        $prod *= $num[$j];
    }
    print("The Product of ");
     
     for ($l = 0; $l <size($num); $l++)
     {
         print(($num[$l]) + ",");
     }
     
     print(" is " + $prod + "!");
    return $prod;
}
proc float Div(float $num[])
{
    float $res = $num[0];
    for ($j = 1; $j < size($num); $j++)
    {
        $res /= $num[$j];
    }
    print("The Quotient of ");
     
     for ($l = 0; $l <size($num); $l++)
     {
         print(($num[$l]) + ",");
     }
     
     print(" is " + $res + "!");
    return $res;
}

proc float Mean(float $num[])
{
 float $sum = 0;
 float $average;
 
 for ($i = 0; $i < size($num); $i++)
 {
      $sum += $num[$i];
 }   
 
 $average = ($sum / size($num));
 print("The Average of ");
     
     for ($l = 0; $l <size($num); $l++)
     {
         print(($num[$l]) + ",");
     }
     
     print(" is " + $average + "!");
    return $average;
 return $average;   
}

proc float Power(float $num1, int $num2)
{
    
    $num1 = $num[0];
    $num2 = $num[1];
    float $result = $num1;
    for ($i = 1; $i < $num2; $i++)
    {
        $result *= $num1;
    }
    print("The result of ");
	print ($num[0]);
		print (" to the ");
			print ("$num[1]);
				print ("is" + $result + "!");
    return $result;
}

proc float mode(float $num[])
{
    float $modeValue; //value to return
    float $countArray[] = {}; //new array to evaluate what is the highest frequency number
    int $countNum = 0; //running total of how often it occurs
    for ($i = 0; $i < size($num); $i++) //this for loop should take the each element in the array and count how often the number occurs
    {
        int $currentIndex = $i; 
        for ($k = 0; $k <size($num); $k++) //nested loop that does the counting by comparing the current element to each number in the entire array
        {
         
            if ($num[$currentIndex] == $num[$k])
            {
                $countNum++;
            }

        }
        $countArray[$i] = $countNum; //after counting how often the number appears in the array it creates a new array that parrallels the current array and counts how often each number occurs
        $countNum = 0;
    }
    print $countArray;
     //this next section uses the new array to figure out what the index location of the highest occuring number is. (This does not take into account the possibility of mulptiple mode values
    int $highestValue = 0;
    int $valueLocation;
    
    for ($j = 0; $j < size($countArray); $j++) //this loop goes through countArray and if the current element in countArray is larger than the highest value variable, it overwrites the variable then assigns the value location
    {
        if($countArray[$j] > $highestValue)
        {
            $highestValue = $countArray[$j];
            $valueLocation = $j;
        }
    }
    
    $modeValue = $num[$valueLocation]; //uses the value location from the above for loop to determine which number in the num array is the mode
    print("The Mode of ");
     
     for ($l = 0; $l <size($num); $l++)
     {
         print(($num[$l]) + ",");
     }
     
     print(" is " + $modeValue + "!");
    return $modeValue;
    
    
}

proc float Median(float $num[])
{
    float $medianValue = 0;
    int $numSize = size($num);
    float $evenIndex1, $evenIndex2;    
    $num = `sort($num)`;
    print $num;
    
    if (size($num) % 2 == 0)
    {
        $evenIndex1 = $num[$numSize/2];
        $evenIndex2 = $num[$numSize/2-1];
        $medianValue = ($evenIndex1 + $evenIndex2) / 2; 
    }
    else
    {
        $medianValue = $num[$numSize/2];
    }
    
  print("The Median of ");
     
     for ($l = 0; $l <size($num); $l++)
     {
         print(($num[$l]) + ",");
     }
     
     print(" is " + $medianValue + "!");
    
    return $medianValue;
}



proc float CalcFunctions (float $num[], string $function)
{
    float $result;
    
    if ($function == "Add")
    {
        $result =  `Addition($num)`;
        return $result;
    }
    else if ($function == "Subtract")
    {
        $result = `Sub($num)`;
        return $result;
    }
    else if ($function == "Multiply")
    {
        $result = `Mult($num)`;
        return $result;
    }
    else if ($function == "Divide")
    {
        $result = `Div($num)`;
        return $result;
    }
    else if($function == "mean")
	{
	$result = `Mean($num)`;
	return $result
	}
    else if ($function == "median")
	{
	$result = `Median($num)`;
	return $result
	}
    else if ($function == "mode")
	{
	$result = `Mode($num)`;
	return $result;
	}
    else if ($function == "power")
	{
	$result = `Power($num)`;
	return $result;
	}
    else
    {
        print ("Invalid Input");
        return 0;
    }
}


CalcFunctions({100,2,2}, "Multiply");